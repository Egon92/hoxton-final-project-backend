// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  username   String
  full_name  String
  email      String  @unique
  password   String
  avatar     String
  phone      Int
  address    String
  bio        String
  isEmployer Boolean

  postedProjects   Project[]      @relation("employer")
  acceptedProjects Project[]      @relation("employee")
  bids             Bids[]
  reviews          Review[]
  users            Conversation[] @relation("user")
  participants     Conversation[] @relation("participant")
  Chat             Chat[]
}

model Category {
  id            Int       @id @default(autoincrement())
  category_name String
  category_logo String
  projects      Project[]
}

model Project {
  id          Int      @id @default(autoincrement())
  price       Int
  deadline    String
  title       String
  overview    String
  description String
  status      Int
  employee    User?    @relation("employee", fields: [employee_id], references: [id])
  employee_id Int?
  employer    User     @relation("employer", fields: [employer_id], references: [id])
  employer_id Int
  categoty    Category @relation(fields: [category_id], references: [id])
  category_id Int
  bids        Bids[]
  reviews     Review[]
}

model Bids {
  id          Int     @id @default(autoincrement())
  project     Project @relation(fields: [project_id], references: [id])
  project_id  Int
  bids        Int
  employee    User    @relation(fields: [employee_id], references: [id])
  employee_id Int
}

model Review {
  id          Int     @id @default(autoincrement())
  text        String
  project     Project @relation(fields: [project_id], references: [id])
  project_id  Int
  employee    User    @relation(fields: [employee_id], references: [id])
  employee_id Int
  dateCreated String
}

model Conversation {
  id             Int  @id @default(autoincrement())
  user           User @relation("user", fields: [user_id], references: [id])
  partecipant    User @relation("participant", fields: [participant_id], references: [id])
  user_id        Int
  participant_id Int

  chats Chat[]
}

model Chat {
  id              Int          @id @default(autoincrement())
  messageText     String
  conversation    Conversation @relation(fields: [conversation_id], references: [id])
  conversation_id Int
  user            User         @relation(fields: [userId], references: [id])
  userId          Int
}
